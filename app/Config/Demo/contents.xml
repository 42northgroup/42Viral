<?xml version="1.0" encoding="utf-8"?>
<!--
- phpMyAdmin XML Dump
- version 3.3.10deb1
- http://www.phpmyadmin.net
-
- Host: localhost
- Generation Time: Oct 07, 2011 at 02:57 AM
- Server version: 5.1.54
- PHP Version: 5.3.5-1ubuntu7.2
-->

<pma_xml_export version="1.0">
    <!--
    - Database: 'jasonsnider_com'
    -->
    <database name="jasonsnider_com">
        <!-- Table contents -->
        <table name="contents">
            <column name="id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="title">The Incessant Ramblings of an Over Caffeinated Web Developer</column>
            <column name="slug">the-incessant-ramblings-of-an-over-caffeinated-web-developer</column>
            <column name="base_slug">the-incessant-ramblings-of-an-over-caffeinated-web-developer</column>
            <column name="body">Web development and stuff</column>
            <column name="tease">Web development and stuff</column>
            <column name="description">NULL</column>
            <column name="keywords">NULL</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file"></column>
            <column name="object_type">blog</column>
            <column name="parent_content_id">NULL</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2011-08-10 21:21:34</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2011-08-11 06:56:24</column>
        </table>
        <table name="contents">
            <column name="id">4e4676e1-fe94-4750-8114-35324bb83359</column>
            <column name="title">Accessing phpMyAdmin After apt-get install</column>
            <column name="slug">accessing-phpmyadmin-after-apt-get-install</column>
            <column name="base_slug">accessing-phpmyadmin-after-apt-get-install</column>
            <column name="body">NULL</column>
            <column name="tease">When working in a Debian based system, apt-get is a great utility for installing packages and programs. phpMyAdmin one of my favorite tools for dealing with a MySQL database. Naturally, I install phpMyAdmin using apt-get. Depending on the version of your Debian based OS or anything that may have gone wrong during install; how you go about accessing phpMyAdmin isn't always so clear.</column>
            <column name="description">A quick tutorial on making phpMyAdmin accessible after an apt-get install.</column>
            <column name="keywords">MySQL, phpMyAdmin, Apache2, Debian, Ubuntu, apt-get </column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file">accessing-phpmyadmin-after-apt-get-install</column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2010-12-03 08:06:40</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2011-08-14 23:13:34</column>
        </table>
        <table name="contents">
            <column name="id">4e48984c-7cf4-4291-a5fe-57164bb83359</column>
            <column name="title">Tracking IP Addresses and Other User Data.</column>
            <column name="slug">tracking-ip-addresses-and-other-user-data</column>
            <column name="base_slug">tracking-ip-addresses-and-other-user-data-</column>
            <column name="body">NULL</column>
            <column name="tease">Understanding your users is a key metric when it comes to optimizing your user's experience. Here's a few &quot;old school&quot; techniques for gathering such information.</column>
            <column name="description">NULL</column>
            <column name="keywords">PHP, MySQL, analytics</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file">ip-address-and-other-user-data</column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2008-10-18 22:53:48</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2008-10-23 06:54:30</column>
        </table>
        <table name="contents">
            <column name="id">4e490649-4688-4830-898a-57164bb83359</column>
            <column name="title">Backing Up the Backups Cloud Storage and Redundancy</column>
            <column name="slug">backing-up-the-backups-cloud-storage-and-redundancy</column>
            <column name="base_slug">backing-up-the-backups-cloud-storage-and-redundancy</column>
            <column name="body">&lt;p&gt;As I was exploring my latest Ubuntu install I started playing with the UbuntuOne service. UbuntuOne is cloud based service for backing up an sharing your files. It is very much a Dropbox clone.&lt;/p&gt;
&lt;p&gt;I use a combination of Dropbox and TrueCrypt for syncing data across my computers while allowing browser based access. I've often wondered what would happen if Dropbox would become unavailable and really need access to something I'm storing there. UbuntuOne to the rescue. My UbuntuOne account give me 2GB of cloud storage; the same as Dropbox's default allowance. I went into my Dropbox directory and created a folder called UbuntuOneSync, right clicked on the folder and selected the UbuntuOne -&amp;gt; Synchronize This Folder option. Now any files I want to make sure I have acces to will go in this directory. From a user standpoint the synchronization is the same, but nowall my changes are backed up to two clouds. Now if Dropbox ever becomes unaccessible I can still access my files via UbuntuOne and vise versa.&lt;/p&gt;
&lt;p&gt;Like Dropbox, UbuntuOne has services available for Windows and iPhone so it's not just restricted to Linux users.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://one.ubuntu.com/&quot; target=&quot;_blank&quot;&gt;UbuntuOne&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://www.dropbox.com&quot; target=&quot;_blank&quot;&gt;DropBox&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;</column>
            <column name="tease">As I was exploring my latest Ubuntu install I started playing with the UbuntuOne service. UbuntuOne is cloud based service for backing up an sharing your files. It is very much a Dropbox clone.</column>
            <column name="description">A few thoughts on redundant cloud storage</column>
            <column name="keywords">Dropbox, UbuntuOne, cloud, storage</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file"></column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2010-12-03 06:43:05</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2010-12-03 06:43:05</column>
        </table>
        <table name="contents">
            <column name="id">4e490aa9-3fe8-474a-a140-5ac14bb83359</column>
            <column name="title">Building Traffic Reports</column>
            <column name="slug">building-traffic-reports</column>
            <column name="base_slug">building-traffic-reports</column>
            <column name="body">NULL</column>
            <column name="tease">Once you've gathered some information about your user base you'll need to make some since of it. Here's a few Old School PHP report writing tips.</column>
            <column name="description">A few techniques for turning user data into a useful report</column>
            <column name="keywords">PHP, MySQL, traffic, reports</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file">building-traffic-reports</column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2008-10-19 07:01:45</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2008-11-12 07:06:09</column>
        </table>
        <table name="contents">
            <column name="id">4e490ce6-37cc-4f94-a50d-57234bb83359</column>
            <column name="title">CakePHP's Security Component, jQuery, DOM Manipulation and the Blackhole</column>
            <column name="slug">cakephp-s-security-component-jquery-dom-manipulation-and-the-blackhole</column>
            <column name="base_slug">cakephp-s-security-component-jquery-dom-manipulation-and-the-blackhole</column>
            <column name="body">NULL</column>
            <column name="tease">I have been doing some basic I/O on top of CakePHP recently and I decided to
    utilize CakePHP's built in Security Component to help defend against
        CSRF attacks. I have ran into a few conflicts involving DOM
        manipulation and hidden fields. The documentation for the Security
        component seem to be lacking, so I thought I would take a minute and
        share what I found and how I resolved it.</column>
            <column name="description">Tip's for working with CakePHP's form helper and security component</column>
            <column name="keywords">CakePHP, forms, Security, PHP</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file">cakephps-security-component-jquery-dom-manipulation-and-the-blackhole</column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2011-08-15 07:11:18</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2011-08-15 07:13:33</column>
        </table>
        <table name="contents">
            <column name="id">4e499b0c-feb8-4213-86df-5ac14bb83359</column>
            <column name="title">Dropbox, My Thumbdrive in the Cloud</column>
            <column name="slug">dropbox-my-thumbdrive-in-the-cloud</column>
            <column name="base_slug">dropbox-my-thumbdrive-in-the-cloud</column>
            <column name="body">&lt;p&gt;
 As a web developer I have come to rely on virtual machines. I need them for
cross platform development as well as various day to day tasks. This often
requires me moving common files between my MacBook and it's many virtual
machines as well as my workstation and it's many virtual machines. Typically
this has involved the continual movement of thumb drives across the systems
or even emailing the files to my self. Thanks to Dropbox and cloud computing
their is a better way.
&lt;/p&gt;

&lt;h3&gt;Current workflow&lt;/h3&gt;
&lt;p&gt;
I have two boot environments; Mac and Linux. My personal machine is a 13&quot;
MacBook Pro, my primary work machine native boots to Ubuntu Linux. Both
machines run multiple virtual machines using VirtualBox. The MacBook
runs Linux and Windows virtual machines while my work machine runs multiple
Windows virtual machines. All of my web development is done in Linux; the
code is easily kept in sync using git repositories, however their are other
files that do not justify going into a git repository but do need to be shared.
These files go to the thumb drive and get moved around as needed. Windows
has only two uses for me; IE testing and Access. The IE testing should be
obvious but my need for Access probably isn't. Once a week we update our
database with a data feed from one of our partners. This feed come to us
via Access. I open the database, convert it to XML drop those files onto
a thumb drive. I then move that thumb drive to a Linux machine to do the
real work.
&lt;/p&gt;

&lt;h3&gt;Dropbox&lt;/h3&gt;
&lt;p&gt;
I like to refer to Drobox as my thumb drive in the cloud because that is exactly
what it is. It replaces my thumb drive and it's in the cloud. Dropbox offers
both free and paid storage solutions. The free solution starts at 2GB and
can be expanded to 8GB through referrals. It offers both a  web interface and
a desktop application. The web interface is well done and works great in pinch.
Having said that, I recommend the desktop application. It installs quickly
and becomes part of your operating systems native file system. In the end you
have one Dropbox in the that syncs across all of your PCs as soon as you edit,
delete, or create a new file on any machine (using either the desktop or web
application) it instantly syncs across all of your machines.
&lt;/p&gt;

&lt;h3&gt;Improved workflow&lt;/h3&gt;
&lt;p&gt;
Now that we know what Dropbox is we can look at how it can improve our workflow
across virtual machines. Instead of saving a file locally; moving the file
to my thumb drive or email; moving the thumb drive to a new machine; dragging
the file into the target machine;
I just save the file to Dropbox. Since all of my machine have Dropbox installed
and linked to a common account, the file is now on all of my machines instantly.
In the end my real work doesn't change but I have eliminated several steps,
creating a smoother workflow.
&lt;/p&gt;

&lt;h3&gt;Tips&lt;/h3&gt;

&lt;p&gt;Dropbox is a great way to share files between PC and mobile devices.&lt;/p&gt;
&lt;p&gt;Paranoid like me? Use
&lt;a href=&quot;http://www.truecrypt.org/&quot; target=&quot;_blank&quot;&gt;TruCrypt&lt;/a&gt;
with Dropbox to assure nothing can get leaked.&lt;/p&gt;
&lt;p&gt;
Sign up using the following referal link and get an extra 250mb.
&lt;br&gt;&lt;a href=&quot;https://www.dropbox.com/referrals/NTY5NjUzMzA5&quot;&gt;https://www.dropbox.com/referrals/NTY5NjUzMzA5&lt;/a&gt;
&lt;/p&gt;</column>
            <column name="tease">As a web developer I have come to rely on virtual machines. I need them for
cross platform development as well as various day to day tasks. This often
requires me moving common files between my MacBook and it's many virtual
machines as well as my workstation and it's many virtual machines. Typically
this has involved the continual movement of thumb drives across the systems
or even emailing the files to my self. Thanks to Dropbox and cloud computing
their is a better way.</column>
            <column name="description">Ingratiating Dropbox into your development workflow</column>
            <column name="keywords">Dropbox, cloud, development</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file"></column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2010-07-15 17:17:47</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2010-07-15 17:21:54</column>
        </table>
        <table name="contents">
            <column name="id">4e49a25f-19b8-4dfa-afa2-57234bb83359</column>
            <column name="title">Git; Setup a Server and Web Based Workflow in About 10 Minutes</column>
            <column name="slug">git-setup-a-server-and-web-based-workflow-in-about-10-minutes</column>
            <column name="base_slug">git-setup-a-server-and-web-based-workflow-in-about-10-minutes</column>
            <column name="body">NULL</column>
            <column name="tease">Early on in my career I tracked my code changes using a text editor then pushed those changes over FTP, I knew there had to be a better way. Eventually, I was introduced to concurrent version system (CVS). While this did automate the tracking process and brought some since of sanity to team coding efforts, it still didn't quite feel right. SVN seemed a popular choice but I saw no real value in switching over, then along came Git. Almost the very minute I started playing with Git I knew I had a winner. This is everything version control should be. I knew instantly I should be using Git however, the question did remain; how?</column>
            <column name="description">A quick tutorial for getting git up in running</column>
            <column name="keywords">NULL</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file">git-setup-a-server-and-web-based-workflow-in-about-10-minutes</column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2010-07-07 17:49:03</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2010-07-07 17:50:32</column>
        </table>
        <table name="contents">
            <column name="id">4e49a36b-7168-4556-9e33-57154bb83359</column>
            <column name="title">Setting Up Netbeans and Sun Java6 in Lucid Lynx Ubuntu 10-4</column>
            <column name="slug">setting-up-netbeans-and-sun-java6-in-lucid-lynx-ubuntu-10-4</column>
            <column name="base_slug">setting-up-netbeans-and-sun-java6-in-lucid-lynx-ubuntu-10-4</column>
            <column name="body">NULL</column>
            <column name="tease">As a geek I'm always picking up different tools and weighing them against my current method of doing things. As a web developer my integrated development environment (IDE) is a critical piece of my day. Traditionally, I've used Eclipse but over the last few months I've moved to Netbeans. From a performance and usability standpoint it just feels a bit snappier and the language integration seems just a little tighter. It has great native support for PHP, Ruby on Rails and I've even heard talk of a CakePHP plugin so most of my day to day stuff is covered.</column>
            <column name="description">Setting up Netbeans and Java6 in Ubuntu</column>
            <column name="keywords">Netbeans, Java, Java 6, ubuntu, Linux</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file">setting-up-netbeans-and-sun-java6-in-lucid-lynx-ubuntu-10-4</column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2011-08-16 17:53:31</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2011-08-16 17:56:27</column>
        </table>
        <table name="contents">
            <column name="id">4e49a4d1-b8d4-42f0-b40d-57164bb83359</column>
            <column name="title">Multiplatform Development and Testing</column>
            <column name="slug">multiplatform-development-and-testing</column>
            <column name="base_slug">multiplatform-development-and-testing</column>
            <column name="body">&lt;p&gt;
As a web developer I have found there are three things I cannot live without.
The LAMP stack, Adobe and IE6. I know what your probably thinking. There are Linux
alternatives to Adobe and IE6 is an old legacy browser, why worry about it? I
will not argue either point as they are both valid. Those points aside I need to be
interoperable with the real world.
&lt;/p&gt;

&lt;p&gt;
By trade I'm a programmer, not a designer while as a programmer I can happily
live in the LAMP stack and never leave, however, the end product (your website)
needs to be sexy. Making it sexy is a designers job and designers (atleast the ones
I know) live in Adobe. This probably means I'll need to take a proprietary Adobe
format (typically .psd) slice it and/or extract the elements I need and convert
them to the final web format. To make this possible I need Adobe. So, what's the
rational behind IE6? Three things actually. First, IE6 still has a 30% market
share making it the number one browser currently in use. Second, a quick check of
Google Analytics and I see IE6 is still accounts for nearly 25% of my site traffic
(This I cannot ignore), and finally.Microsoft recently announced they are going
to be supporting IE6 until 2014. Taking these facts into account, as a developer,
failing to test for IE6 compatibility means I have failed in both prudence and
diligence.
&lt;/p&gt;

&lt;h2&gt;My Environment&lt;/h2&gt;
&lt;p&gt;My full development environemnt consists of Linux servers, a Linux environment
for development and Windows enviroments for graphics and testing&lt;/p&gt;

&lt;strong&gt;Optimal recommended hardware specs&lt;/strong&gt;
&lt;p&gt;These may vary a bit, but these are my laptop specs which handles multiple
multiple confiurations and multiple VM's running at once.&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;2.13ghz Intel Core DUO&lt;/li&gt;
    &lt;li&gt;4gb RAM&lt;/li&gt;
    &lt;li&gt;512mb Nvida GForce 9600&lt;/li&gt;
&lt;/ul&gt;

&lt;strong&gt;Minimal recommended hardware specs&lt;/strong&gt;
&lt;p&gt;If your running any version of AdobeCS I reccomend using Windows as the host
system and suspending any guests prior to entering AdobeCS.&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;1.8 ghz AMD Turion64&lt;/li&gt;
    &lt;li&gt;2gb RAM&lt;/li&gt;
    &lt;li&gt;128mb ATI&lt;/li&gt;
    &lt;li&gt;Operating Systems&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Recommended Operating Systems&lt;/strong&gt;
&lt;p&gt;Currently Windows 7 RC is acts as my host, I'll likely get board with that
setup and switch to something else. Any of the follwing are not only needed
for proper development and testing, they will all work fine as your host OS&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Debian 4 Linux (My production serversrun Debian 4 so this is a good choice
    for testing)&lt;/li&gt;
    &lt;li&gt;Ubuntu 9.04 Linux (Ubuntu is based on Debian and has the same server stack.
    Ubuntu's a bit more user friendly so I like to run my development enviroment here)&lt;/li&gt;
    &lt;li&gt;Windows XP Home or Professional (Required for testing in IE6, IE7 and IE8
    and this may serve as your AdobeCS host)&lt;/li&gt;
    &lt;li&gt;Windows 7 (I'm using an RC at the time of this post. Use for testing IE8 and
    to host your AdobeCS apps)&lt;/li&gt;
&lt;/ul&gt;</column>
            <column name="tease">As a web developer I have found there are three things I cannot live without.
The LAMP stack, Adobe and IE6. I know what your probably thinking. There are Linux
alternatives to Adobe and IE6 is an old legacy browser, why worry about it? I
will not argue either point as they are both valid. Those points aside I need to be
interoperable with the real world.</column>
            <column name="description">Develop in Linux test in the real world.</column>
            <column name="keywords">VM, Virtual Machine, Ubuntu, Windows, Development</column>
            <column name="canonical">NULL</column>
            <column name="syntax">html</column>
            <column name="status">published</column>
            <column name="custom_file"></column>
            <column name="object_type">post</column>
            <column name="parent_content_id">4e433caf-0a30-4d32-8664-05d04bb83359</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2009-10-12 17:59:29</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2011-08-15 18:02:16</column>
        </table>
        <table name="contents">
            <column name="id">4e4b2e85-6148-4269-9670-3b34b86a43f2</column>
            <column name="title">Jason Snider's Resume</column>
            <column name="slug">jason-snider-s-resume</column>
            <column name="base_slug">jason-snider-s-resume</column>
            <column name="body">&lt;p&gt;
312.572.9796 :: jason.douglas.snider@gmail.com
&lt;/p&gt;

&lt;h2&gt;Web Developer, Designer, Architect and Strategist&lt;/h2&gt;

&lt;p&gt;
    Striking the balance between open tools and proprietary knowledge to drive
    change, foster innovation and increase efficiency by building smarter
    enterprises that can prosper amidst competition.
&lt;/p&gt;
&lt;!--
&lt;p&gt;
    Web developer and open source enthusiast with a sincere passion for building
    and advancing knowledge while resolving complex problems and business
    challenges through technical innovation.
&lt;/p&gt;
--&gt;

&lt;h2&gt;Skills&lt;/h2&gt;

&lt;h3&gt;Back End Technologies&lt;/h3&gt;
PHP, CakePHP, Linux, Apache, MySQL

&lt;h3&gt;Front End Technologies&lt;/h3&gt;
AJAX, JavaScript, jQuery, script.aculo.us, HTML, HTML5 CSS, CSS3

&lt;h3&gt;Systems&lt;/h3&gt;
Linux (Debian, Ubuntu, Red Hat), Mac, Windows (all)

&lt;h3&gt;Methodologies and Concepts&lt;/h3&gt;
MVC, Scrum, Agile Development, Rapid Application Development

&lt;h3&gt;Development Tools&lt;/h3&gt;
NetBeans, Eclipse, Quanta, VIM, Firebug, Git, CVS


&lt;h2&gt;Work Experience&lt;/h2&gt;

&lt;h3&gt;MicroTrain Technologies :: Chicago, IL :: 2007 - Present&lt;/h3&gt;
Senior Developer
&lt;ul&gt;
    &lt;li&gt;Designed, developed and implemented a scalable and robust system architecture&lt;/li&gt;
    &lt;li&gt;Automated and supported operational intelligence&lt;/li&gt;
    &lt;li&gt;Increased efficiency in operational processes by as much as 90%&lt;/li&gt;
    &lt;li&gt;Developed and implemented development processes&lt;/li&gt;
    &lt;li&gt;Devised and executed successful development strategies&lt;/li&gt;
    &lt;li&gt;Built and managed a small effective team&lt;/li&gt;
    &lt;li&gt;Communicated and enforced standards and best practices&lt;/li&gt;
    &lt;li&gt;Set and prioritized long and short term development goals &lt;/li&gt;
    &lt;li&gt;Prioritized multiple tasks effectively&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Lextech Global Services :: Lisle, IL :: 2006 - 2007&lt;/h3&gt;
Systems Engineer
&lt;ul&gt;
    &lt;li&gt;Project for Active Care Network&lt;/li&gt;
    &lt;li&gt;Developed pilot systems that pioneered the &quot;Health 2.0&quot; arena&lt;/li&gt;
    &lt;li&gt;Wrote and tested code&lt;/li&gt;
    &lt;li&gt;Implemented complex event processing&lt;/li&gt;
    &lt;li&gt;UI Enhancement&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Freelance :: 2002 - 2009&lt;/h3&gt;

Web Developer
&lt;p&gt;
    Built several static and dynamic websites as well CMS packages using
    PHP, MySQL, HTML and CSS.
&lt;/p&gt;

&lt;h2&gt;Education&lt;/h2&gt;
&lt;h3&gt;Keller Graduate School of Management, Oakbrook, IL&lt;/h3&gt;
Master Information Systems Management Information Security, 2009

&lt;h3&gt;DeVry University, Addison, IL&lt;/h3&gt;
Bachelor of Science Computer Information Systems, 2006

&lt;h2&gt;Projects&lt;/h2&gt;

2010 :: The Gift Pool
&lt;p&gt;
    A social gift giving site. Design and developed a social networking
    infrastructure using CakePHP and jQuery. APIs include AmazonÃ¢â‚¬â„¢s product
    advertising API and Authorze.net for payment processing.
&lt;/p&gt;

2010 :: 42v.us
&lt;p&gt;
    A simple URL shortening service. I based this on an ASCII sequencing
    algorithm and developed the application itself in PHP and MySQL.
&lt;/p&gt;

2010 :: 42Viral
&lt;p&gt;
    An OpenSource AJAX driven CMS built on top of CakePHP and jQuery. This is
    being designed to provide barebones functionality out of the box while
    remaining flexible enough to not get in the way of custom development.
    The goal, develop your idea and get it to market; even faster!
&lt;/p&gt;

2008 :: CRM Migration and Optimization
&lt;p&gt;Ported a legacy mash up of PHP packages including XRMS, PHPWebsite,
    OSCommerce and a plethora custom code into a CakePHP based application.
    This included a massive database refactoring; reducing 360 tables down to
    just over 70. This has reduced page load times by as much as 60%.
&lt;/p&gt;

2008 :: Rewrote Event Scheduling System
&lt;p&gt;Reworked the event managers data model and implemented a hierarchical
    category to course to event structure. I then reworked the UI to allow
    multiple events to be input with a single submit. This resulted in a
    greater than 90% productivity increase; reducing 20 hours of work to
    just under 2.
&lt;/p&gt;

2007 :: Server Migration
&lt;p&gt;Managed a successful migration of PHP3/PHP4 and  MySQL4 based application
    running on RedHat servers to Debian servers running PHP5 and MySQL5.
&lt;/p&gt;

2007 :: Quick and Easy Website
&lt;p&gt;My first crack at an Open Source Project. The product was an extensible CMS
    aimed at developers. Technologies included PHP and MySQL.
&lt;/p&gt;

2007-present :: MicroTrain.net
&lt;p&gt;Continually focused on keeping the design and layout clean, fresh and up to
date. Major rewrites have included a custom blogging system and shopping cart.
APIs include Google Maps, Twitter and Authorize.net for payment processing.
&lt;/p&gt;

2004 :: Floor13.net
&lt;p&gt;A homebrewed CMS built using PHP/MySQL for the purpose of marketing ourselves
    as freelancers.
&lt;/p&gt;

2003 :: SniBla.Com
&lt;p&gt;Built in PHP, MySQL, this provided a place to play games, read jokes, and
    even manage your movie collection.
&lt;/p&gt;

2003 :: Online Mortgage
&lt;p&gt;Developed a secure online mortgage application in PHP/MySQL.&lt;/p&gt;

2002-present :: Clay Haus
&lt;p&gt;Redesigned the website and implemented a small data driven application for
    menu management. Built on IIS using PHP and SQL Server.
&lt;/p&gt;</column>
            <column name="tease">Striking the balance between open tools and proprietary knowledge to drive change, foster innovation and increase efficiency by building smarter enterprises that can prosper amidst competition.</column>
            <column name="description">A web developers resume</column>
            <column name="keywords">PHP, MySQL, Linux, Apache, JavaScript, jQuery</column>
            <column name="canonical">/page/resume</column>
            <column name="syntax">html</column>
            <column name="status">draft</column>
            <column name="custom_file"></column>
            <column name="object_type">page</column>
            <column name="parent_content_id">NULL</column>
            <column name="created_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="created">2011-08-16 21:59:17</column>
            <column name="modified_person_id">4e41b612-2490-4ab5-b1c5-05cc4bb83359</column>
            <column name="modified">2011-08-16 22:00:46</column>
        </table>
    </database>
</pma_xml_export>