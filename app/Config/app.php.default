<?php

/* ==============
 * == Themes ====
 *=============*/

/**
 * Define the default theme set
 */
define('THEME_SET', 'Default');

//define('HOME_TITLE', 'Default Home Page');

/* ====================
 * == File Uploads ====
 * ==================*/
// The following helps generalize read/write path for user uploaded files and images
/**
 * The common part of image write paths
 */
define('IMAGE_WRITE_PATH',  ROOT .DS . APP_DIR . DS . WEBROOT_DIR . DS . 'img' . DS . 'people' . DS);

/**
 * The common part of file write paths
 */
define('FILE_WRITE_PATH',  ROOT .DS . APP_DIR . DS . WEBROOT_DIR . DS . 'files' . DS . 'people' . DS);

/**
 * The common part of web image urls
 */
define('IMAGE_READ_PATH', '/img/people/');

/**
 * The common part of file urls
 */
define('FILE_READ_PATH', '/files/people/');

/* ================
 * == Comments ====
 *===============*/

/**
 * Configure the systems default commenting engine
 * Comment engines
 *     native - 42Viral's native comment engine (Default)
 *     //See Thrid Party API's for additional configuration
 *     disqus - @link http://disqus.com/
 */   
Configure::write('Comment.engine', 'native');

/* =========================
 * == Thrid Party API's ====
 * =======================*/
/**
 * The standard password for authed users. This is simply used to keep the auth component happy
 * as the User has already been authenticated via Oauth
 */
    ## Configure::write('Oauth.password', '');

/**
 * Disqus
 * @see http://disqus.com/
 */
    ## Configure::write('Disqus.shortname', '');
    ## Configure::write('Disqus.developer', 1);

/**
 * Google
 */

//Analytics tracking code
    ## Configure::write('Google.setAccount');
    
// Webmaster Tools verification code
    ## Configure::write('Google.SiteVerification', '');

/**
 * Twitter
 */
    ## Configure::write('Twitter.consumer_key', '');
    ## Configure::write('Twitter.consumer_secret', '');  

/**
 * LinkedIn
 */
    ## Configure::write('LinkedIn.consumer_key', '');
    ## Configure::write('LinkedIn.consumer_secret', '');  
    ## Configure::write('LinkedIn.callback', '/oauth/linkedin_callback'); 

/* ====================
 * == Asset Helper ====
 * ==================*/
//Configuration options for asset management and optimization

/*
 * JS_METHOD: (JavaScript minification method to use)
 *     jsMin         - http://code.google.com/p/minify/
 *     closureRemote - Google closure compiler using CURL
 *     closureLocal  - Uses a local clouser complier.jar
 *     yuiLocal      - Uses a local yui jar file
 */
define('JS_METHOD', 'closureLocal');

/**
 * CSS_METHOD: (CSS minification method to use)
 *     cssMin - http://code.google.com/p/cssmin/
 *     yuiLocal      - Uses a local yui jar file
 * 
 */
define('CSS_METHOD', 'yuiLocal');

/**
 * ASSET_CACHE (The location of the cache directory, this is where the single asset file will be written via the server 
 * path) 
 */
define('ASSET_CACHE', ROOT . DS . APP_DIR . DS . WEBROOT_DIR . DS . 'cache');

/**
 * ASSET_FILES (The top level directory to the client assest via the server path)
 */
define('ASSET_FILES', ROOT . DS . APP_DIR . DS . WEBROOT_DIR . DS);

/**
 * JAVA (Sets the location of the Java binary
 */
define('JAVA', DS . 'usr' . DS . 'bin' . DS . 'java');

/**
 * CLOSURE (Sets the location of the closure-compiler jar file)
 */
define('CLOSURE',  ROOT .DS . APP_DIR . DS . 'Vendor' . DS . 'minify' . DS . 'closure' . DS . 'compiler.jar');

/**
 * YUI (Sets the location of the YUI Compressor jar file)
 */
define('YUI',   ROOT .DS . APP_DIR . DS . 'Vendor' . DS . 'minify' . DS . 'yui' . DS . 'yuicompressor-2.4.6.jar');

/**
 * Allows us to choose not to minify, good for debugging
 */
define('MINIFY_ASSETS', true);

/**
 * When set to true this overrides the native hash checking functionality and forces a new asset build 
 */
define('FORCE_NEW_ASSETS', false);

/* ==================
 * == Test Cases ====
 * ================*/
// Test Case common constants
/**
 * 
 */
define('TEST_CASE_DIR', APP_DIR . DS . 'Test' . DS . 'Case');

/**
 * 
 */
define('TEST_MODEL', ROOT . DS . TEST_CASE_DIR . DS . 'Model' . DS);

/**
 * 
 */
define('TEST_CONTROLER', ROOT . DS . TEST_CASE_DIR . DS . 'Controller' . DS);

/**
 * 
 */
define('TEST_VIEW', ROOT . DS . TEST_CASE_DIR . DS . 'View' . DS);
?>
